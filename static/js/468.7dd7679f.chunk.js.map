{"version":3,"file":"static/js/468.7dd7679f.chunk.js","mappings":"uOAGMA,EAAOC,EAAAA,GAAAA,GAAH,qIASJC,EAAYD,EAAAA,GAAAA,GAAH,2DAKTE,EAAQF,EAAAA,GAAAA,GAAH,sFAMLG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,KAAPJ,CAAH,sBAEVK,EAAaL,EAAAA,GAAAA,IAAH,4QAeVM,EAASN,EAAAA,GAAAA,IAAH,yD,SCWZ,EArCkB,SAAC,GAAe,IAAbO,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACV,EAAD,CAAMW,UAAU,oCAAhB,SACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,SAACX,EAAD,UACGW,EAAKC,QACJ,UAACV,EAAD,CAAYW,GAAE,kBAAaF,EAAKG,IAAMC,MAAO,CAAEC,KAAMT,GAArD,WACE,SAACH,EAAD,WACE,SAACC,EAAD,CACEY,IACEN,EAAKO,YAAL,yCACsCP,EAAKO,aACvCC,EAENC,IAAKT,EAAKC,WAGd,SAACX,EAAD,UAAQU,EAAKC,YAbHD,EAAKG,GADR,KAqBpB,C,oICTD,UAzBa,WACX,OAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOf,EAAP,KAAcgB,EAAd,KACMf,GAAWC,EAAAA,EAAAA,MAejB,OAbAe,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,MAFT,OAERC,EAFQ,OAGdJ,EAASI,EAASC,SAHJ,gDAKdC,QAAQC,MAAM,yBAAd,MALc,yDAAH,qDASfL,GACD,GAAE,KAGD,iCACE,SAAC,IAAD,6BACkB,IAAjBlB,EAAMwB,SAAgB,SAAC,IAAD,CAAWxB,MAAOA,EAAOC,SAAUA,MAG/D,C,sEC3BKwB,E,QAAYhC,GAAAA,GAAH,sE,mMCATiC,EAAM,mCACNC,EAAM,+BAENR,EAAgB,mCAAG,6FACjBS,EADiB,UACFD,EADE,uCACgCD,GADhC,SAEAG,EAAAA,EAAAA,IAAUD,GAFV,cAEjBR,EAFiB,yBAGhBA,EAASU,MAHO,2CAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,gFACfJ,EADe,UACAD,EADA,iCAC4BD,EAD5B,kBACyCM,EADzC,oBAEEH,EAAAA,EAAAA,IAAUD,GAFZ,cAEfR,EAFe,yBAGdA,EAASU,MAHK,2CAAH,sDAMdG,EAAe,mCAAG,WAAMC,GAAN,gFAChBN,EADgB,UACDD,EADC,kBACYO,EADZ,oBAC+BR,GAD/B,SAECG,EAAAA,EAAAA,IAAUD,GAFX,cAEhBR,EAFgB,yBAIfA,EAASU,MAJM,2CAAH,sDAOfK,EAAY,mCAAG,WAAMD,GAAN,kFACbN,EADa,UACED,EADF,kBACeO,EADf,4BAC0CR,GAD1C,SAEIG,EAAAA,EAAAA,IAAUD,GAFd,uBAEXE,EAFW,EAEXA,KAFW,kBAIZA,EAAKM,MAJO,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,gFAChBN,EADgB,UACDD,EADC,kBACYO,EADZ,4BACuCR,GADvC,SAECG,EAAAA,EAAAA,IAAUD,GAFX,cAEhBR,EAFgB,yBAIfA,EAASU,MAJM,2CAAH,qD","sources":["components/MovieList/MovieList.styles.jsx","components/MovieList/MovieList.jsx","page/Home.jsx","page/Home.styled.jsx","services/fatchApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n`;\n\nconst MovieItem = styled.li`\n  display: flex;\n  width: 220px;\n`;\n\nconst Title = styled.h2`\n  font-size: 18px;\n  padding: 0 6px;\n  text-align: center;\n`;\n\nconst StyledLink = styled(Link)``;\n\nconst ImgWrapper = styled.div`\n  border: 1px solid transparent;\n  border-radius: 10px;\n  padding: 5px;\n  background-color: #ffff;\n  width: 200px;\n  height: 300px;\n  transition: all 0.3s ease-in-out;\n\n  :hover {\n    background-color: orange;\n    opacity: 0.7;\n  }\n`;\n\nconst Poster = styled.img`\n  height: 100%;\n  width: 100%;\n`;\n\nexport { List, MovieItem, Title, StyledLink, ImgWrapper, Poster };\n","import { useLocation } from 'react-router-dom';\nimport noImageTwo from '../img/noImage_two.jpeg';\nimport PropTypes from 'prop-types';\nimport 'animate.css';\n\nimport {\n  ImgWrapper,\n  List,\n  MovieItem,\n  Poster,\n  StyledLink,\n  Title,\n} from './MovieList.styles';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List className=\"animate__animated animate__fadeIn\">\n      {films.map(film => (\n        <MovieItem key={film.id}>\n          {film.title && (\n            <StyledLink to={`/movies/${film.id}`} state={{ from: location }}>\n              <ImgWrapper>\n                <Poster\n                  src={\n                    film.poster_path\n                      ? `https://image.tmdb.org/t/p/w300${film.poster_path}`\n                      : noImageTwo\n                  }\n                  alt={film.title}\n                />\n              </ImgWrapper>\n              <Title>{film.title}</Title>\n            </StyledLink>\n          )}\n        </MovieItem>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieList;\n","import MovieList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getPopularMovies } from 'services/fatchApi';\nimport { HomeTitle } from './Home.styled';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getPopularMovies();\n        setFilms(response.results);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <HomeTitle>Trending today</HomeTitle>\n      {films.length !== 0 && <MovieList films={films} location={location} />}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nconst HomeTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport { HomeTitle };\n","import axios from 'axios';\n\nconst KEY = '58e9cbeb11d69aa820ec44a871560ce5';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst getPopularMovies = async () => {\n  const apiConfig = `${URL}/trending/movie/day?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  return response.data;\n};\n\nconst getSearchMovie = async query => {\n  const apiConfig = `${URL}/search/movie?api_key=${KEY}&query=${query}&page=1`;\n  const response = await axios.get(apiConfig);\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  // console.log(response.data);\n  return response.data;\n};\n\nconst getMovieCast = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(apiConfig);\n  // console.log(data.cast);\n  return data.cast;\n};\n\nconst getMovieReviews = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  // console.log(response);\n  return response.data;\n};\n\nexport {\n  getPopularMovies,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n"],"names":["List","styled","MovieItem","Title","StyledLink","Link","ImgWrapper","Poster","films","location","useLocation","className","map","film","title","to","id","state","from","src","poster_path","noImageTwo","alt","useState","setFilms","useEffect","fetchData","getPopularMovies","response","results","console","error","length","HomeTitle","KEY","URL","apiConfig","axios","data","getSearchMovie","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}