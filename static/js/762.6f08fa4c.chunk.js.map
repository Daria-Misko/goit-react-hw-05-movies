{"version":3,"file":"static/js/762.6f08fa4c.chunk.js","mappings":"6LAEMA,E,OAAgBC,GAAAA,IAAH,2C,SCiBnB,EAhBe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAI5D,C,2KCsBD,EApCmB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACZC,EACND,EADMC,YAAaC,EACnBF,EADmBE,aAAcC,EACjCH,EADiCG,MAAOC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAI5DC,EADO,IAAIC,KAAKN,GACCO,cAEjBC,GAAiC,GAAfN,GAAmBO,QAAQ,GAEnD,OACE,iCACE,SAAC,KAAD,CAAMC,KAAK,IAAX,mBACA,4BACE,0BACE,gBACEC,IACEZ,EAAW,yCAC2BA,GAClCa,EAENC,IAAKZ,OAGT,4BACE,uBAAIA,EAAK,UAAMA,EAAN,aAAgBI,EAAhB,kCACT,wCAAgBG,EAAhB,QACA,sCACA,uBAAIL,KACJ,oCACA,uBAAIC,GAAUA,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAK5D,E,iBClCKC,GAAW5B,E,OAAAA,IAAO6B,EAAAA,GAAP7B,CAAH,sBCuDd,EAlDqB,WACnB,OAAwC8B,EAAAA,EAAAA,UAAS,IAAjD,eAAOtB,EAAP,KAAqBuB,EAArB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAU,mCAAG,oGAEfJ,GAAa,GAFE,UAGOK,EAAAA,EAAAA,IAAgBJ,GAHvB,UAGTK,EAHS,gDAKNC,EAAAA,GAAAA,MAAY,qBALN,OAOfT,EAAgBQ,GAPD,kDASfC,EAAAA,GAAAA,MAAY,mDATG,yBAWfP,GAAa,GAXE,6EAAH,qDAehBI,GAhBoB,CAiBrB,GAAE,CAACH,KAKF,iCACE,0CACCF,IAAa,SAACS,EAAA,EAAD,IACbjC,IAAgB,SAAC,EAAD,CAAYA,aAAcA,KAC3C,4BACE,2BACE,yBACE,SAACoB,EAAD,CAAUc,GAAG,OAAb,qBAEF,yBACE,SAACd,EAAD,CAAUc,GAAG,UAAb,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C,uKCtDKC,EAAM,mCACNC,EAAM,+BAENC,EAAgB,mCAAG,6FACjBC,EADiB,UACFF,EADE,uCACgCD,GADhC,SAEAI,EAAAA,EAAAA,IAAUD,GAFV,cAEjBE,EAFiB,yBAGhBA,EAASC,MAHO,2CAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,gFACfL,EADe,UACAF,EADA,iCAC4BD,EAD5B,kBACyCQ,EADzC,oBAEEJ,EAAAA,EAAAA,IAAUD,GAFZ,cAEfE,EAFe,yBAGdA,EAASC,MAHK,2CAAH,sDAMdb,EAAe,mCAAG,WAAMJ,GAAN,gFAChBc,EADgB,UACDF,EADC,kBACYZ,EADZ,oBAC+BW,GAD/B,SAECI,EAAAA,EAAAA,IAAUD,GAFX,cAEhBE,EAFgB,yBAIfA,EAASC,MAJM,2CAAH,sDAOfG,EAAY,mCAAG,WAAMpB,GAAN,kFACbc,EADa,UACEF,EADF,kBACeZ,EADf,4BAC0CW,GAD1C,SAEII,EAAAA,EAAAA,IAAUD,GAFd,uBAEXG,EAFW,EAEXA,KAFW,kBAIZA,EAAKI,MAJO,2CAAH,qD","sources":["components/Loader/Loader.styles.jsx","components/Loader/Loader.jsx","components/MovieDescr/MovieDescr.jsx","page/MovieDetails.styles.jsx","page/MovieDetails.jsx","services/fatchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst LoaderWrapper = styled.div`\n  margin: 0 auto;\n`;\n\nexport { LoaderWrapper };\n","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styles';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n      />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import { Link } from 'react-router-dom';\nimport noImage from '../img/No_Image.webp';\n\nconst MovieDescr = ({ movieDetails }) => {\n  const { poster_path, release_date, title, vote_average, overview, genres } =\n    movieDetails;\n\n  const date = new Date(release_date);\n  const movieYear = date.getFullYear();\n\n  const votePercentage = (vote_average * 10).toFixed(0);\n\n  return (\n    <>\n      <Link href=\"#\">Back</Link>\n      <div>\n        <div>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                : noImage\n            }\n            alt={title}\n          />\n        </div>\n        <div>\n          <p>{title ? `${title} (${movieYear})` : `Name of movie not found`}</p>\n          <p>User Score: {votePercentage}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres && genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDescr;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst ItemLink = styled(Link)``;\n\nexport { ItemLink };\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/fatchApi';\nimport { toast } from 'react-toastify';\nimport MovieDescr from 'components/MovieDescr/MovieDescr';\nimport Loader from 'components/Loader/Loader';\nimport { ItemLink } from './MovieDetails.styles';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getDetails = async () => {\n      try {\n        setIsLoading(true);\n        const results = await getMovieDetails(movieId);\n        if (!results) {\n          return toast.error('No Movie Details');\n        }\n        setMovieDetails(results);\n      } catch (error) {\n        toast.error('Sorry, something went wrong...Please, try again');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getDetails();\n  }, [movieId]);\n\n  // console.log(movieDetails);\n\n  return (\n    <>\n      <div>MovieDetails</div>\n      {isLoading && <Loader />}\n      {movieDetails && <MovieDescr movieDetails={movieDetails} />}\n      <div>\n        <ul>\n          <li>\n            <ItemLink to=\"cast\">Cast</ItemLink>\n          </li>\n          <li>\n            <ItemLink to=\"reviews\">Reviews</ItemLink>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '58e9cbeb11d69aa820ec44a871560ce5';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst getPopularMovies = async () => {\n  const apiConfig = `${URL}/trending/movie/day?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  return response.data;\n};\n\nconst getSearchMovie = async query => {\n  const apiConfig = `${URL}/search/movie?api_key=${KEY}&query=${query}&page=1`;\n  const response = await axios.get(apiConfig);\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  // console.log(response.data);\n  return response.data;\n};\n\nconst getMovieCast = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(apiConfig);\n  // console.log(data.cast);\n  return data.cast;\n};\n\nexport { getPopularMovies, getSearchMovie, getMovieDetails, getMovieCast };\n"],"names":["LoaderWrapper","styled","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","movieDetails","poster_path","release_date","title","vote_average","overview","genres","movieYear","Date","getFullYear","votePercentage","toFixed","href","src","noImage","alt","map","genre","name","join","ItemLink","Link","useState","setMovieDetails","isLoading","setIsLoading","movieId","useParams","useEffect","getDetails","getMovieDetails","results","toast","Loader","to","Suspense","fallback","KEY","URL","getPopularMovies","apiConfig","axios","response","data","getSearchMovie","query","getMovieCast","cast"],"sourceRoot":""}