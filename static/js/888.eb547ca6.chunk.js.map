{"version":3,"file":"static/js/888.eb547ca6.chunk.js","mappings":"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","sources":["components/Loader/Loader.styles.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.styles.jsx","components/MovieList/MovieList.jsx","page/Home.styled.jsx","components/SearchBar/SearchBar.styles.jsx","components/SearchBar/SearchBar.jsx","page/Movies.jsx","services/fatchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport { LoaderWrapper };\n","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styles';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n      />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n`;\n\nconst MovieItem = styled.li`\n  display: flex;\n  width: 220px;\n`;\n\nconst Title = styled.h2`\n  font-size: 18px;\n  padding: 0 6px;\n  text-align: center;\n`;\n\nconst StyledLink = styled(Link)``;\n\nconst ImgWrapper = styled.div`\n  border: 1px solid transparent;\n  border-radius: 10px;\n  padding: 5px;\n  background-color: #ffff;\n  width: 200px;\n  height: 300px;\n  transition: all 0.3s ease-in-out;\n\n  :hover {\n    background-color: orange;\n    opacity: 0.7;\n  }\n`;\n\nconst Poster = styled.img`\n  height: 100%;\n  width: 100%;\n`;\n\nexport { List, MovieItem, Title, StyledLink, ImgWrapper, Poster };\n","import { useLocation } from 'react-router-dom';\nimport noImageTwo from '../img/noImage_two.jpeg';\nimport PropTypes from 'prop-types';\nimport 'animate.css';\n\nimport {\n  ImgWrapper,\n  List,\n  MovieItem,\n  Poster,\n  StyledLink,\n  Title,\n} from './MovieList.styles';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List className=\"animate__animated animate__fadeIn\">\n      {films.map(film => (\n        <MovieItem key={film.id}>\n          {film.title && (\n            <StyledLink to={`/movies/${film.id}`} state={{ from: location }}>\n              <ImgWrapper>\n                <Poster\n                  src={\n                    film.poster_path\n                      ? `https://image.tmdb.org/t/p/w300${film.poster_path}`\n                      : noImageTwo\n                  }\n                  alt={film.title}\n                />\n              </ImgWrapper>\n              <Title>{film.title}</Title>\n            </StyledLink>\n          )}\n        </MovieItem>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nconst HomeTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport { HomeTitle };\n","import styled from 'styled-components';\n\nconst Searchbar = styled.div`\n  padding: 0 25px;\n`;\n\nconst SearchForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  gap: 1em;\n  width: 700px;\n  height: 50px;\n  max-width: 100%;\n  margin-bottom: 15px;\n`;\n\nconst SearchFormButton = styled.button`\n  border: 3px solid var(--brown);\n  background-color: var(--brown);\n  color: var(--cream);\n  border-radius: 50px;\n  display: flex;\n  align-items: center;\n  width: 30%;\n  justify-content: center;\n  cursor: pointer;\n\n  :hover {\n    background-color: var(--cream);\n    color: var(--brown);\n  }\n`;\n\nconst Input = styled.input`\n  width: 70%;\n  padding: 0 20px;\n  border: 3px solid var(--brown);\n  border-radius: 50px;\n  display: flex;\n  align-items: center;\n  background-color: var(--cream);\n\n  font-family: 'IBM Plex Mono';\n  font-size: 20px;\n  font-weight: bold;\n  letter-spacing: 2px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nconst Label = styled.span`\n  font-family: 'IBM Plex Mono';\n  font-size: 20px;\n  font-weight: bold;\n  letter-spacing: 2px;\n`;\n\nexport { Searchbar, SearchForm, SearchFormButton, Input, Label };\n","import PropTypes from 'prop-types';\n\nimport {\n  Searchbar as SearchbarWrapper,\n  SearchForm,\n  SearchFormButton,\n  Input,\n  Label,\n} from './SearchBar.styles';\n\nconst SearchBar = ({ onSubmit, onChange, value }) => {\n  return (\n    <SearchbarWrapper>\n      <SearchForm onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          name=\"searchQuery\"\n          autoComplete=\"off\"\n          autoFocus={false}\n          placeholder=\"Search movie\"\n          value={value}\n          onChange={onChange}\n        ></Input>\n        <SearchFormButton type=\"submit\">\n          <Label>Search</Label>\n        </SearchFormButton>\n      </SearchForm>\n    </SearchbarWrapper>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nexport default SearchBar;\n","import MovieList from 'components/MovieList/MovieList';\nimport SearchBar from 'components/SearchBar/SearchBar';\n\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getSearchMovie } from 'services/fatchApi';\nimport Loader from 'components/Loader/Loader';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { HomeTitle } from './Home.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [resultMovieList, setResultMovieList] = useState([]);\n  const location = useLocation();\n\n  const [inputValue, setInputValue] = useState('');\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const nextParams = inputValue !== '' ? { query: inputValue } : {};\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) return;\n    setQuery(query);\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (!query) return;\n    const getMovies = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await getSearchMovie(query);\n        if (results.length === 0) {\n          return toast.error('No Movies');\n        }\n        setResultMovieList(results);\n      } catch (error) {\n        toast.error('Sorry, something went wrong...Please, try again');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovies();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputValue.trim() === '') {\n      return toast.error('Please enter a request! ');\n    }\n    setQuery(inputValue);\n    setSearchParams(nextParams);\n  };\n\n  const handleInputChange = e => {\n    setInputValue(e.currentTarget.value.toLowerCase());\n  };\n  return (\n    <>\n      <HomeTitle>Movies</HomeTitle>\n      <SearchBar\n        onSubmit={handleSubmit}\n        onChange={handleInputChange}\n        value={inputValue}\n      />\n      <MovieList films={resultMovieList} state={location} />\n      {isLoading && <Loader />}\n      <ToastContainer position=\"top-right\" autoClose={3000} theme=\"colored\" />\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '58e9cbeb11d69aa820ec44a871560ce5';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst getPopularMovies = async () => {\n  const apiConfig = `${URL}/trending/movie/day?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  return response.data;\n};\n\nconst getSearchMovie = async query => {\n  const apiConfig = `${URL}/search/movie?api_key=${KEY}&query=${query}&page=1`;\n  const response = await axios.get(apiConfig);\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  // console.log(response.data);\n  return response.data;\n};\n\nconst getMovieCast = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(apiConfig);\n  // console.log(data.cast);\n  return data.cast;\n};\n\nconst getMovieReviews = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  // console.log(response);\n  return response.data;\n};\n\nexport {\n  getPopularMovies,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n"],"names":["LoaderWrapper","styled","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","List","MovieItem","Title","StyledLink","Link","ImgWrapper","Poster","films","location","useLocation","className","map","film","title","to","id","state","from","src","poster_path","noImageTwo","alt","HomeTitle","Searchbar","SearchForm","SearchFormButton","Input","Label","onSubmit","onChange","value","type","name","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","useState","resultMovieList","setResultMovieList","inputValue","setInputValue","query","setQuery","isLoading","setIsLoading","nextParams","useEffect","get","getMovies","getSearchMovie","results","length","toast","e","preventDefault","trim","currentTarget","toLowerCase","MovieList","Loader","position","autoClose","theme","KEY","URL","getPopularMovies","apiConfig","axios","response","data","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}