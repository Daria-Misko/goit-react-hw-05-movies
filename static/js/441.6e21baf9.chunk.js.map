{"version":3,"file":"static/js/441.6e21baf9.chunk.js","mappings":"8LAEMA,E,QAAgBC,GAAAA,IAAH,8F,SCiBnB,EAhBe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAI5D,C,qMCfKC,EAAaR,EAAAA,GAAAA,IAAH,wKAUVS,EAAST,EAAAA,GAAAA,IAAH,yCAINU,EAAeV,EAAAA,GAAAA,IAAH,gFAMZW,EAAOX,EAAAA,GAAAA,EAAH,4EAKJY,EAAcZ,EAAAA,GAAAA,IAAH,sB,SC8BjB,EA9CmB,SAAC,GAAsB,IAApBa,EAAmB,EAAnBA,aACZC,EACND,EADMC,YAAaC,EACnBF,EADmBE,aAAcC,EACjCH,EADiCG,MAAOC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAG5DC,EADO,IAAIC,KAAKN,GACCO,cACjBC,GAAiC,GAAfN,GAAmBO,QAAQ,GAEnD,OACE,+BACE,UAACd,EAAD,YACE,SAACF,EAAD,WACE,SAACC,EAAD,CACEgB,IACEX,EAAW,yCAC2BA,GAClCY,EAENC,IAAKX,OAGT,UAACJ,EAAD,YACE,SAACD,EAAD,UACGK,EAAK,UAAMA,EAAN,aAAgBI,EAAhB,kCAER,UAACT,EAAD,0BAAmBY,EAAnB,QACA,sCACA,SAACZ,EAAD,UAAOO,KACP,oCACA,SAACP,EAAD,UAAOQ,GAAUA,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAK/D,E,kBCzCKC,EAAuBhC,EAAAA,GAAAA,IAAH,4CAIpBiC,GAAWjC,EAAAA,EAAAA,IAAOkC,EAAAA,KAAPlC,CAAH,uDAIRmC,EAAgBnC,EAAAA,GAAAA,GAAH,+FAOboC,GAAepC,EAAAA,EAAAA,IAAOkC,EAAAA,KAAPlC,CAAH,kGCmDlB,EAxDqB,WAAO,IAAD,IACzB,GAAwCqC,EAAAA,EAAAA,UAAS,MAAjD,eAAOxB,EAAP,KAAqByB,EAArB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAsB7C,OApBAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CACA,IAAMQ,EAAU,mCAAG,oGAEfT,GAAa,GAFE,UAGOU,EAAAA,EAAAA,IAAgBT,GAHvB,UAGTU,EAHS,gDAKNC,EAAAA,GAAAA,MAAY,qBALN,OAOfd,EAAgBa,GAPD,kDASfC,EAAAA,GAAAA,MAAY,mDATG,yBAWfZ,GAAa,GAXE,6EAAH,qDAehBS,GAhBoB,CAiBrB,GAAE,CAACR,KAGF,UAACT,EAAD,YACE,SAACI,EAAD,CAAciB,GAAIR,EAAcC,MAAO,CAAEC,KAAMJ,GAA/C,kBAGCJ,IAAa,SAACe,EAAA,EAAD,IACbzC,IAAgB,SAAC,EAAD,CAAYA,aAAcA,KAC3C,4BACE,UAACsB,EAAD,YACE,yBACE,SAACF,EAAD,CAAUoB,GAAG,OAAOP,MAAO,CAAEC,KAAMF,GAAnC,qBAIF,yBACE,SAACZ,EAAD,CAAUoB,GAAG,UAAUP,MAAO,CAAEC,KAAMF,GAAtC,2BAKJ,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C,mMCjEKC,EAAM,mCACNC,EAAM,+BAENC,EAAgB,mCAAG,6FACjBC,EADiB,UACFF,EADE,uCACgCD,GADhC,SAEAI,EAAAA,EAAAA,IAAUD,GAFV,cAEjBE,EAFiB,yBAGhBA,EAASC,MAHO,2CAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,gFACfL,EADe,UACAF,EADA,iCAC4BD,EAD5B,kBACyCQ,EADzC,oBAEEJ,EAAAA,EAAAA,IAAUD,GAFZ,cAEfE,EAFe,yBAGdA,EAASC,MAHK,2CAAH,sDAMdb,EAAe,mCAAG,WAAMT,GAAN,gFAChBmB,EADgB,UACDF,EADC,kBACYjB,EADZ,oBAC+BgB,GAD/B,SAECI,EAAAA,EAAAA,IAAUD,GAFX,cAEhBE,EAFgB,yBAIfA,EAASC,MAJM,2CAAH,sDAOfG,EAAY,mCAAG,WAAMzB,GAAN,kFACbmB,EADa,UACEF,EADF,kBACejB,EADf,4BAC0CgB,GAD1C,SAEII,EAAAA,EAAAA,IAAUD,GAFd,uBAEXG,EAFW,EAEXA,KAFW,kBAIZA,EAAKI,MAJO,2CAAH,sDAOZC,EAAe,mCAAG,WAAM3B,GAAN,gFAChBmB,EADgB,UACDF,EADC,kBACYjB,EADZ,4BACuCgB,GADvC,SAECI,EAAAA,EAAAA,IAAUD,GAFX,cAEhBE,EAFgB,yBAIfA,EAASC,MAJM,2CAAH,qD","sources":["components/Loader/Loader.styles.jsx","components/Loader/Loader.jsx","components/MovieDescr/MovieDescr.styles.jsx","components/MovieDescr/MovieDescr.jsx","page/MovieDetails.styles.jsx","page/MovieDetails.jsx","services/fatchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport { LoaderWrapper };\n","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styles';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n      />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nconst ImgWrapper = styled.div`\n  width: 300px;\n  height: 450px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.03);\n  }\n`;\n\nconst Poster = styled.img`\n  width: 300px;\n`;\n\nconst MovieWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-bottom: 15px;\n`;\n\nconst Text = styled.p`\n  font-size: 16px;\n  /* display: inline-block; */\n`;\n\nconst Description = styled.div``;\n\nexport { ImgWrapper, Poster, MovieWrapper, Description, Text };\n","import PropTypes from 'prop-types';\nimport noImage from '../img/noImage_two.jpeg';\n\nimport {\n  Description,\n  ImgWrapper,\n  MovieWrapper,\n  Poster,\n  Text,\n} from './MovieDescr.styles';\n\nconst MovieDescr = ({ movieDetails }) => {\n  const { poster_path, release_date, title, vote_average, overview, genres } =\n    movieDetails;\n  const date = new Date(release_date);\n  const movieYear = date.getFullYear();\n  const votePercentage = (vote_average * 10).toFixed(0);\n\n  return (\n    <>\n      <MovieWrapper>\n        <ImgWrapper>\n          <Poster\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                : noImage\n            }\n            alt={title}\n          />\n        </ImgWrapper>\n        <Description>\n          <Text>\n            {title ? `${title} (${movieYear})` : `Name of movie not found`}\n          </Text>\n          <Text>User Score: {votePercentage}%</Text>\n          <h2>Overview</h2>\n          <Text>{overview}</Text>\n          <h2>Genres</h2>\n          <Text>{genres && genres.map(genre => genre.name).join(', ')}</Text>\n        </Description>\n      </MovieWrapper>\n    </>\n  );\n};\n\nMovieDescr.propTypes = {\n  films: PropTypes.shape({\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n  }),\n};\n\nexport default MovieDescr;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst MoveDitailsContainer = styled.div`\n  padding: 0 25px;\n`;\n\nconst ItemLink = styled(Link)`\n  text-decoration: underline;\n`;\n\nconst AdditinalList = styled.ul`\n  padding: 0;\n  li:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nconst ItemLinkBack = styled(Link)`\n  display: block;\n  text-decoration: underline;\n  margin-bottom: 15px;\n`;\n\nexport { ItemLink, AdditinalList, MoveDitailsContainer, ItemLinkBack };\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/fatchApi';\nimport { toast } from 'react-toastify';\nimport MovieDescr from 'components/MovieDescr/MovieDescr';\nimport Loader from 'components/Loader/Loader';\nimport {\n  AdditinalList,\n  ItemLink,\n  ItemLinkBack,\n  MoveDitailsContainer,\n} from './MovieDetails.styles';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getDetails = async () => {\n      try {\n        setIsLoading(true);\n        const results = await getMovieDetails(movieId);\n        if (!results) {\n          return toast.error('No Movie Details');\n        }\n        setMovieDetails(results);\n      } catch (error) {\n        toast.error('Sorry, something went wrong...Please, try again');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getDetails();\n  }, [movieId]);\n\n  return (\n    <MoveDitailsContainer>\n      <ItemLinkBack to={backLinkHref} state={{ from: location }}>\n        Back\n      </ItemLinkBack>\n      {isLoading && <Loader />}\n      {movieDetails && <MovieDescr movieDetails={movieDetails} />}\n      <div>\n        <AdditinalList>\n          <li>\n            <ItemLink to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </ItemLink>\n          </li>\n          <li>\n            <ItemLink to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </ItemLink>\n          </li>\n        </AdditinalList>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </MoveDitailsContainer>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '58e9cbeb11d69aa820ec44a871560ce5';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst getPopularMovies = async () => {\n  const apiConfig = `${URL}/trending/movie/day?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  return response.data;\n};\n\nconst getSearchMovie = async query => {\n  const apiConfig = `${URL}/search/movie?api_key=${KEY}&query=${query}&page=1`;\n  const response = await axios.get(apiConfig);\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  // console.log(response.data);\n  return response.data;\n};\n\nconst getMovieCast = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(apiConfig);\n  // console.log(data.cast);\n  return data.cast;\n};\n\nconst getMovieReviews = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  // console.log(response);\n  return response.data;\n};\n\nexport {\n  getPopularMovies,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n"],"names":["LoaderWrapper","styled","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ImgWrapper","Poster","MovieWrapper","Text","Description","movieDetails","poster_path","release_date","title","vote_average","overview","genres","movieYear","Date","getFullYear","votePercentage","toFixed","src","noImage","alt","map","genre","name","join","MoveDitailsContainer","ItemLink","Link","AdditinalList","ItemLinkBack","useState","setMovieDetails","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkHref","state","from","useEffect","getDetails","getMovieDetails","results","toast","to","Loader","Suspense","fallback","KEY","URL","getPopularMovies","apiConfig","axios","response","data","getSearchMovie","query","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}