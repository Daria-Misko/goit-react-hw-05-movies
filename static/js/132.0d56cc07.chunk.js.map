{"version":3,"file":"static/js/132.0d56cc07.chunk.js","mappings":"sWAEMA,EAAgBC,EAAAA,GAAAA,GAAH,iKASbC,EAAeD,EAAAA,GAAAA,GAAH,0IAWZE,EAAeF,EAAAA,GAAAA,EAAH,sM,SC8ClB,EA5Da,WACX,OAAkCG,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OApBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAO,mCAAG,oGAEZN,GAAa,GAFD,UAGUO,EAAAA,EAAAA,IAAaJ,GAHvB,UAGNK,EAHM,gDAKHC,EAAAA,GAAAA,MAAY,wBALT,OAOZP,EAAQM,GAPI,kDASZC,EAAAA,GAAAA,MAAY,mDATA,yBAWZT,GAAa,GAXD,6EAAH,qDAebM,GAhBoB,CAiBrB,GAAE,CAACH,KAGF,gCACGJ,IAAa,SAACW,EAAA,EAAD,KACd,SAAChB,EAAD,UACmB,IAAhBO,EAAKU,OACJV,EAAKW,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACxC,OACE,UAACpB,EAAD,YACE,gBACEqB,IACED,EAAY,yCAC0BA,GAClCE,EAENC,IAAKJ,EACLK,OAAO,SAGT,UAACvB,EAAD,qBACQ,0BAAOkB,QAEf,UAAClB,EAAD,0BACa,0BAAOgB,SAfHC,EAmBtB,KAED,yFAKT,C,8EChEKO,E,QAAgB1B,GAAAA,IAAH,8F,SCiBnB,EAhBe,WACb,OACE,SAAC0B,EAAD,WACE,SAAC,KAAD,CACEC,SAAS,EACTF,OAAO,KACPG,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAI5D,C,mMCfKC,EAAM,mCACNC,EAAM,+BAENC,EAAgB,mCAAG,6FACjBC,EADiB,UACFF,EADE,uCACgCD,GADhC,SAEAI,EAAAA,EAAAA,IAAUD,GAFV,cAEjBE,EAFiB,yBAGhBA,EAASC,MAHO,2CAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,gFACfL,EADe,UACAF,EADA,iCAC4BD,EAD5B,kBACyCQ,EADzC,oBAEEJ,EAAAA,EAAAA,IAAUD,GAFZ,cAEfE,EAFe,yBAGdA,EAASC,MAHK,2CAAH,sDAMdG,EAAe,mCAAG,WAAMlC,GAAN,gFAChB4B,EADgB,UACDF,EADC,kBACY1B,EADZ,oBAC+ByB,GAD/B,SAECI,EAAAA,EAAAA,IAAUD,GAFX,cAEhBE,EAFgB,yBAIfA,EAASC,MAJM,2CAAH,sDAOf3B,EAAY,mCAAG,WAAMJ,GAAN,kFACb4B,EADa,UACEF,EADF,kBACe1B,EADf,4BAC0CyB,GAD1C,SAEII,EAAAA,EAAAA,IAAUD,GAFd,uBAEXG,EAFW,EAEXA,KAFW,kBAIZA,EAAKjC,MAJO,2CAAH,sDAOZqC,EAAe,mCAAG,WAAMnC,GAAN,gFAChB4B,EADgB,UACDF,EADC,kBACY1B,EADZ,4BACuCyB,GADvC,SAECI,EAAAA,EAAAA,IAAUD,GAFX,cAEhBE,EAFgB,yBAIfA,EAASC,MAJM,2CAAH,qD","sources":["components/Cast/Cast.styles.jsx","components/Cast/Cast.jsx","components/Loader/Loader.styles.jsx","components/Loader/Loader.jsx","services/fatchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst CastContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 20px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\nconst CastCardItem = styled.li`\n  width: 200px;\n  text-align: center;\n  margin: 0 auto;\n\n  img {\n    height: 280px;\n    width: 200px;\n  }\n`;\n\nconst CastCardName = styled.p`\n  /* display: flex;\n  gap: 5px;\n  justify-content: baseline;\n  align-items: baseline; */\n  font-weight: 700;\n  font-size: 16px;\n\n  span {\n    font-weight: 400;\n  }\n`;\n\nexport { CastContainer, CastCardItem, CastCardName };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/fatchApi';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport noImage from '../img/Unknown_person.jpeg';\nimport { CastCardItem, CastCardName, CastContainer } from './Cast.styles';\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getCast = async () => {\n      try {\n        setIsLoading(true);\n        const results = await getMovieCast(movieId);\n        if (!results) {\n          return toast.error('No Cast Information');\n        }\n        setCast(results);\n      } catch (error) {\n        toast.error('Sorry, something went wrong...Please, try again');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <CastContainer>\n        {cast.length !== 0 ? (\n          cast.map(({ character, id, original_name, profile_path }) => {\n            return (\n              <CastCardItem key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                      : noImage\n                  }\n                  alt={original_name}\n                  height=\"200\"\n                />\n\n                <CastCardName>\n                  Name: <span>{original_name}</span>\n                </CastCardName>\n                <CastCardName>\n                  Character: <span>{character}</span>\n                </CastCardName>\n              </CastCardItem>\n            );\n          })\n        ) : (\n          <p>Sorry, We don't have any cast information for this movie.</p>\n        )}\n      </CastContainer>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport { LoaderWrapper };\n","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styles';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n      />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst KEY = '58e9cbeb11d69aa820ec44a871560ce5';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst getPopularMovies = async () => {\n  const apiConfig = `${URL}/trending/movie/day?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  return response.data;\n};\n\nconst getSearchMovie = async query => {\n  const apiConfig = `${URL}/search/movie?api_key=${KEY}&query=${query}&page=1`;\n  const response = await axios.get(apiConfig);\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  // console.log(response.data);\n  return response.data;\n};\n\nconst getMovieCast = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(apiConfig);\n  // console.log(data.cast);\n  return data.cast;\n};\n\nconst getMovieReviews = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  // console.log(response);\n  return response.data;\n};\n\nexport {\n  getPopularMovies,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n"],"names":["CastContainer","styled","CastCardItem","CastCardName","useState","isLoading","setIsLoading","cast","setCast","movieId","useParams","useEffect","getCast","getMovieCast","results","toast","Loader","length","map","character","id","original_name","profile_path","src","noImage","alt","height","LoaderWrapper","visible","width","ariaLabel","wrapperStyle","wrapperClass","colors","KEY","URL","getPopularMovies","apiConfig","axios","response","data","getSearchMovie","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}